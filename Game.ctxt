#BlueJ class context
comment0.target=Game
comment0.text=\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "Eaten\ by\ a\ Dolphin"\ application.\ \n\ \ "Eaten\ by\ a\ Dolphin"\ is\ a\ highly\ interesting,\ text\ based\ adventure\ game.\ \ Users\ \n\ \ can\ walk\ around\ some\ scenery\ and\ accomplish\ the\ missons\ to\ escape\ from\ dolphin's\ body.\n\ \n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\n\ \ method.\n\ \n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\n\ \ \n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes,\ and\ SeoHyun\ Jen\ Kwon\ (k21070195)\n\ @version\ 2021.11.\n
comment1.params=
comment1.target=Game()
comment1.text=\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\n
comment10.params=command
comment10.target=void\ tryGoRoom(Command)
comment10.text=\ \n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\n\ room,\ otherwise\ print\ an\ error\ message.\n\ Everytime\ the\ player\ moves,\ the\ character\ moves\ too.\n\ \n\ @parm\ command\ The\ command\ created\ from\ the\ words\ the\ user\ typed\ in.\n
comment11.params=
comment11.target=void\ moveAllCharacter()
comment11.text=\n\ Move\ all\ of\ the\ characters\ and\ notice\ the\ player\ if\ any\ of\ them\ is\ in\ the\ same\ room\ with\ the\ plaeyr.\n
comment12.params=
comment12.target=void\ magicTransportation()
comment12.text=\n\ Do\ the\ magic\ transportation.\n\ Move\ the\ player\ to\ the\ random\ room\ until\ he\ is\ not\ in\ the\ magic\ transportation\ room.\n
comment13.params=command
comment13.target=boolean\ quit(Command)
comment13.text=\ \n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\n\ whether\ we\ really\ quit\ the\ game.\n\ \n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\n
comment14.params=command
comment14.target=void\ tryEscape(Command)
comment14.text=\n\ "Escape"\ was\ enterd.Check\ the\ rest\ of\ the\ command\n\ and\ whether\ the\ player\ can\ escape\ and\ win\ the\ game.\n\ \n\ @return\ true,\ if\ the\ player\ won\ the\ game,\ false\ otherwise.\n
comment15.params=
comment15.target=void\ tryGoBack()
comment15.text=\n\ Try\ to\ go\ back\ to\ the\ last\ room\ the\ player\ visited,\ if\ there's\ a\ room\ the\ player\ visited.\n\ Otherwise,\ print\ an\ error\ message.\n
comment16.params=command
comment16.target=void\ checkPrintItems(Command)
comment16.text=\n\ "View"\ was\ entered.\ If\ the\ user\ enters\ "view\ items",\ print\ the\ items\ in\ the\ room.\n\ Otherwise,\ print\ error\ message.\n\ \n\ @parm\ Command\ The\ command\ the\ user\ typed\ in.\n
comment17.params=
comment17.target=java.lang.String\ getItemsInformationCurrentRoom()
comment17.text=\n\ Return\ the\ information\ of\ items\ in\ the\ given\ room,\ in\ the\ form\ of\:\n\ \ \ \ \ \ "NAME\ (DESCRIPTION)\ WEIGHT\ grams"\n\ \ \ or\ "NAME\ (DESCRIPTION)\ You\ can't\ pick\ up\ this\ item."\ if\ the\ item\ can't\ be\ carried.\n\ if\ there\ is\ any\ item\ in\ the\ room/game.\n\ Otherwise,\ print\ an\ error\ message.\n\ \n\ @parm\ aRoom\ The\ room\ where\ the\ items\ initally\ locates.\n\ @return\ The\ String\ information\ of\ item\ in\ the\ given\ room.\n
comment18.params=command
comment18.target=void\ tryPickUp(Command)
comment18.text=\ \n\ Try\ to\ pick\ up\ an\ item.\ If\ the\ item\ can\ be\ carried\ by\ the\ player,\n\ and\ allow\ the\ player\ to\ pick\ up\ the\ item,\ otherwise\ print\ an\ error\ message.\n\ \n\ @parm\ command\ The\ command\ used\ to\ specify\ which\ item\ to\ pick\ up.\n
comment19.params=searchRoomName
comment19.target=Room\ getRoom(java.lang.String)
comment19.text=\n\ Return\ an\ certain\ room\ found\ in\ the\ roomList\ by\ its\ name.\n\ If\ the\ room\ isn't\ found,\ return\ null.\n\ \n\ @parm\ searchRoomName\ The\ name\ of\ the\ room\ to\ search.\n\ @return\ The\ desired\ room\ object.\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\n\ Create\ all\ the\ rooms\ and\ initialize\ their\ fields.\ Store\ them\ in\ the\ room\ list.\n
comment20.params=searchItemName
comment20.target=Item\ getItem(java.lang.String)
comment20.text=\n\ Return\ a\ certain\ item\ found\ in\ the\ itemList\ by\ its\ name.\n\ If\ the\ item\ isn't\ found,\ return\ null.\n\ \n\ @param\ itemName\ The\ name\ of\ the\ item\ to\ search.\n\ @return\ The\ desired\ item\ object.\n
comment21.params=searchCharacterName
comment21.target=GameCharacter\ getCharacter(java.lang.String)
comment21.text=\n\ Return\ a\ character\ found\ in\ the\ characterList\ by\ its\ name.\n\ If\ the\ character\ doesn't\ exist,\ return\ null.\n\ \n\ @parm\ characterName\ The\ name\ of\ the\ character\ to\ get.\n\ @return\ The\ desired\ character\ obejct.\n
comment22.params=command
comment22.target=void\ useItem(Command)
comment22.text=\n\ Use\ an\ item\ in\ the\ pocket\ to\ complete\ the\ mission\ in\ the\ current\ room,\n\ if\ the\ room\ has\ a\ mission\ to\ complete.\n\ \n\ If\ the\ player\ succeeded\ to\ clear\ the\ mission,\ set\ the\ room\ as\ its\ mission\ is\ completed,\n\ otherwise\ print\ an\ error\ message.\n\ \n\ @parm\ itemToUse\ The\ item\ in\ the\ pocket\ to\ use\ to\ complete\ the\ mission.\n
comment23.params=command
comment23.target=void\ talkCharacter(Command)
comment23.text=\n\ Try\ to\ talk\ to\ the\ given\ character.\n\ Print\ out\ the\ talking\ phrase\ of\ the\ character\ if\ the\ user\ input\ is\ valid\ and\ the\ charcter\ is\ in\ the\ same\ room.\n\ Otherwise,\ print\ error\ message.\n\ \n\ @parm\ command\ The\ command\ the\ user\ typed\ in.\n
comment24.params=command
comment24.target=void\ rockPaperScissors(Command)
comment24.text=\n\ Play\ rock-paper-scissors\ with\ the\ character\ the\ player\ met.\n\ Print\ out\ whether\ the\ player\ won\ rock-paper-scissors\ against\ the\ character,\ if\ the\ user\ input\ is\ valid,\n\ the\ charcter\ can\ play\ rock-paper-scissors,\ and\ it\ is\ currently\ in\ the\ same\ room\ with\ the\ player.\n\ Otherwise,\ print\ error\ message.\n\ \n\ If\ the\ player\ wins,\ he\ acquires\ the\ item\ from\ the\ character.\ If\ they\ are\ even,\ they\ play\ it\ again.\n\ Otherwise,\ the\ character\ leaves\ the\ room.\n\ \n\ @parm\ command\ The\ command\ the\ user\ typed\ in.\n
comment25.params=
comment25.target=void\ switchIsAboveWater()
comment25.text=\n\ Switch\ whether\ the\ dolphin\ is\ currently\ above\ the\ water\ level.\n
comment26.params=
comment26.target=boolean\ getIsAboveWater()
comment26.text=\n\ Return\ whether\ the\ dolphin\ is\ currently\ above\ the\ water\ level.\n
comment3.params=
comment3.target=void\ createItems()
comment3.text=\n\ Create\ all\ the\ items\ and\ store\ them\ in\ item\ list.\n\ Initialise\ the\ name\ of\ the\ items\ as\ the\ parser\ converts\ all\ the\ command\ words\ of\ the\ user\ input\ to\ lower\ case.\n
comment4.params=
comment4.target=void\ createGameCharacters()
comment4.text=\n\ Create\ all\ the\ game\ characters\ and\ store\ them\ in\ the\ character\ list.\n
comment5.params=
comment5.target=void\ createMissionItemMap()
comment5.text=\n\ Create\ the\ map\ storing\ the\ mission\ item\ for\ a\ corresponding\ room.\n
comment6.params=
comment6.target=void\ play()
comment6.text=\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\n
comment7.params=
comment7.target=void\ printWelcome()
comment7.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment8.params=command
comment8.target=boolean\ processCommand(Command)
comment8.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ @param\ command\ The\ command\ to\ be\ processed.\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\n
comment9.params=
comment9.target=void\ printHelp()
comment9.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \n\ command\ words.\n
numComments=27
